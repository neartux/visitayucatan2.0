<?php

namespace VisitaYucatanBundle\Repository;
use VisitaYucatanBundle\Entity\HotelHabitacionIdioma;
use VisitaYucatanBundle\utils\Estatuskeys;
use VisitaYucatanBundle\utils\Generalkeys;

/**
 * HotelHabitacionIdiomaRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class HotelHabitacionIdiomaRepository extends \Doctrine\ORM\EntityRepository {

    public function findHotelHabitacionByIdAndIdLanguage($idHotelHabitacion, $idIdioma) {
        $em = $this->getEntityManager();
        $query = $em->createQuery(
            'SELECT habitacionidioma
             FROM VisitaYucatanBundle:HotelHabitacionIdioma habitacionidioma
             WHERE habitacionidioma.estatus = :estatusActivo
             AND habitacionidioma.hotelHabitacion = :idHotelHabitacion
             AND habitacionidioma.idioma = :idIdioma'
        )->setParameter('estatusActivo', Estatuskeys::ESTATUS_ACTIVO)->setParameter('idHotelHabitacion', $idHotelHabitacion)->setParameter('idIdioma', $idIdioma);

        return $query->getOneOrNullResult();
    }

    public function saveHotelHabitacionIdioma($hotelIdiomaTO) {
        $em = $this->getEntityManager();
        $habitacionIdioma = $this->findHotelHabitacionByIdAndIdLanguage($hotelIdiomaTO->getId(), $hotelIdiomaTO->getIdIdioma());
        //$idioma = $this->findOneBy(array('abreviatura' => $abreviatura, 'estatus' => Estatuskeys::ESTATUS_ACTIVO));
        $isNew = Generalkeys::BOOLEAN_FALSE;
        if (is_null($habitacionIdioma)) {
            $isNew = Generalkeys::BOOLEAN_TRUE;
            $habitacionIdioma = new HotelHabitacionIdioma();
            $habitacionIdioma->setEstatus($em->getReference('VisitaYucatanBundle:Estatus', Estatuskeys::ESTATUS_ACTIVO));
            $habitacionIdioma->setHotelHabitacion($em->getReference('VisitaYucatanBundle:HotelHabitacion', $hotelIdiomaTO->getId()));
            $habitacionIdioma->setIdioma($em->getReference('VisitaYucatanBundle:Idioma', $hotelIdiomaTO->getIdIdioma()));
        }
        $habitacionIdioma->setDescripcion($hotelIdiomaTO->getDescripcion());

        $em->persist($habitacionIdioma);
        $em->flush();

        return $isNew;
    }
}
