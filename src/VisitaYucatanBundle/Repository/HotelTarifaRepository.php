<?php

namespace VisitaYucatanBundle\Repository;
use Symfony\Component\Validator\Constraints\Date;
use VisitaYucatanBundle\Entity\HotelTarifa;
use VisitaYucatanBundle\utils\DateUtil;
use VisitaYucatanBundle\utils\Estatuskeys;
use VisitaYucatanBundle\utils\Generalkeys;

/**
 * HotelTarifaRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class HotelTarifaRepository extends \Doctrine\ORM\EntityRepository {

    public function findRateByRangeDate($fechaInicio, $fechaFin, $idHotel, $idContrato, $idHabitacion){
        $em = $this->getEntityManager();
        $sql = "SELECT hotel_tarifa.*
                FROM hotel_tarifa
                WHERE hotel_tarifa.id_hotel_habitacion =  :habitacion
                AND hotel_tarifa.id_hotel_contrato = :contrato
                AND hotel_tarifa.id_hotel = :hotel
                AND hotel_tarifa.id_estatus = :estatus
                AND hotel_tarifa.fecha BETWEEN :fechaInicio AND :fechaFin";
        $params['habitacion'] = $idHabitacion;
        $params['contrato'] = $idContrato;
        $params['hotel'] = $idHotel;
        $params['estatus'] = Estatuskeys::ESTATUS_ACTIVO;
        $params['fechaInicio'] = $fechaInicio;
        $params['fechaFin'] = $fechaFin;
        $stmt = $em->getConnection()->prepare($sql);
        $stmt->execute($params);
        return $stmt->fetchAll();
    }

    public function saveRate($tarifaTO){
        $em = $this->getEntityManager();
        $nextDate = true;
        $fechaActual = $tarifaTO->getFechaInicio();
        // Mientras no se llege a la fecha final se crean o modifican los registros
        while($nextDate){
            $tarifa = $this->getRateNotNull($tarifaTO->getIdHabitacion(), $tarifaTO->getIdContrato(), $tarifaTO->getIdHotel(), $fechaActual);
            $tarifa->setSencillo($tarifaTO->getSencillo());
            $tarifa->setDoble($tarifaTO->getDoble());
            $tarifa->setTriple($tarifaTO->getTriple());
            $tarifa->setCuadruple($tarifaTO->getCuadruple());
            //$tarifa->setFecha(new \DateTime($nextDate));
            print_r($tarifa);

            if(DateUtil::isSammeDate($fechaActual, $tarifaTO->getFechaFin())){
                echo "es misma fecha ya no mas iterada";
                $nextDate = false;
            }else{
                echo "suma un dia a ala fecha";
                $fechaActual = DateUtil::summOneDayToDate($fechaActual);
            }

            $em->persist($tarifa);
            $em->flush();
        }
    }

    public function findTarifaByContratoHabitacionAndDate($habitacion, $contrato, $hotel, $fecha){
        $em = $this->getEntityManager();
        $sql = "SELECT hotel_tarifa.id
                FROM hotel_tarifa
                WHERE hotel_tarifa.id_hotel_habitacion =  :habitacion
                AND hotel_tarifa.id_hotel_contrato = :contrato
                AND hotel_tarifa.id_hotel = :hotel
                AND hotel_tarifa.id_estatus = :estatus
                AND hotel_tarifa.fecha = :fecha";
        $params['habitacion'] = $habitacion;
        $params['contrato'] = $contrato;
        $params['hotel'] = $hotel;
        $params['estatus'] = Estatuskeys::ESTATUS_ACTIVO;
        $params['fecha'] = $fecha;
        $stmt = $em->getConnection()->prepare($sql);
        $stmt->execute($params);
        return $stmt->fetchColumn();
    }

    public function getRateNotNull($habitacion, $contrato, $hotel, $fecha){
        $em = $this->getEntityManager();

        $idioma = $this->findOneBy(array('hotelHabitacion' => $habitacion, 'hotelContrato' => $contrato, 'hotel' => $hotel, 'fecha' => '2016-03-06', 'estatus' => Estatuskeys::ESTATUS_ACTIVO));
        print_r($idioma);exit;
        $tarifaId = $this->findTarifaByContratoHabitacionAndDate($habitacion, $contrato, $hotel, $fecha);
        echo "id encontrado = ".$tarifaId." la fecha = ".$fecha;
        if(is_string($tarifaId)){
            $tarifaObj = new HotelTarifa();
            $tarifaObj->setHotel($em->getReference('VisitaYucatanBundle:Hotel', $hotel));
            $tarifaObj->setHotelHabitacion($em->getReference('VisitaYucatanBundle:HotelHabitacion', $habitacion));
            $tarifaObj->setHotelContrato($em->getReference('VisitaYucatanBundle:HotelContrato', $contrato));
        }else{
            $tarifaObj = $this->find($tarifaId);
        }
        return $tarifaObj;
    }

}
