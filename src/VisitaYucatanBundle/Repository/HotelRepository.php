<?php

namespace VisitaYucatanBundle\Repository;
use VisitaYucatanBundle\utils\Estatuskeys;
use VisitaYucatanBundle\utils\Generalkeys;

/**
 * HotelRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class HotelRepository extends \Doctrine\ORM\EntityRepository {

    public function findAllHotels() {
        $em = $this->getEntityManager();
        $sql = "SELECT *
                FROM hotel
                WHERE hotel.id_estatus = :estatus";
        $params['estatus'] = Estatuskeys::ESTATUS_ACTIVO;
        $stmt = $em->getConnection()->prepare($sql);
        $stmt->execute($params);
        return $stmt->fetchAll();
    }

    public function createHotel($hotel) {
        $em = $this->getEntityManager();
        $hotel->setPromovido(Generalkeys::BOOLEAN_FALSE);
        $hotel->setEstatus($em->getReference('VisitaYucatanBundle:Estatus', Estatuskeys::ESTATUS_ACTIVO));

        $em->persist($hotel);
        $em->flush();
    }

    public function updateHotel($tour) {
        $em = $this->getEntityManager();
        $tourUpdate = $em->getRepository('VisitaYucatanBundle:Tour')->find($tour->getId());
        if (!$tourUpdate) {
            throw new EntityNotFoundException('El tour con id ' . $tour->getId() . " no se encontro");
        }
        // Actualiza la informacion del tour
        $tourUpdate->setDescripcion($tour->getDescripcion());
        $tourUpdate->setCircuito($tour->getCircuito());
        $tourUpdate->setTarifaadulto($tour->getTarifaadulto());
        $tourUpdate->setTarifamenor($tour->getTarifamenor());
        $tourUpdate->setMinimopersonas($tour->getMinimopersonas());

        $em->persist($tourUpdate);
        $em->flush();
    }

    public function deleteHotel($idTour) {
        $em = $this->getEntityManager();
        $tour = $em->getRepository('VisitaYucatanBundle:Tour')->find($idTour);
        if (!$tour) {
            throw new EntityNotFoundException('La moneda con id ' . $idTour . " no se encontro");
        }
        $tour->setEstatus($em->getReference('VisitaYucatanBundle:Estatus', Estatuskeys::ESTATUS_INACTIVO));
        $em->persist($tour);
        $em->flush();
    }

    public function promoveOrNotPromoveHotel($idTour, $boobleanPromove) {
        $em = $this->getEntityManager();
        $tour = $em->getRepository('VisitaYucatanBundle:Tour')->find($idTour);
        if (!$tour) {
            throw new EntityNotFoundException('El tour con id ' . $idTour . " no se encontro");
        }
        $tour->setPromovido($boobleanPromove);

        $em->persist($tour);
        $em->flush();
    }
}
