<?php

namespace VisitaYucatanBundle\Repository;
use Doctrine\ORM\EntityNotFoundException;
use VisitaYucatanBundle\Entity\Datosubicacion;
use VisitaYucatanBundle\Entity\Hotel;
use VisitaYucatanBundle\utils\Estatuskeys;
use VisitaYucatanBundle\utils\Generalkeys;

/**
 * HotelRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class HotelRepository extends \Doctrine\ORM\EntityRepository {

    public function findAllHotels() {
        $em = $this->getEntityManager();
        $sql = "SELECT *
                FROM hotel
                WHERE hotel.id_estatus = :estatus";
        $params['estatus'] = Estatuskeys::ESTATUS_ACTIVO;
        $stmt = $em->getConnection()->prepare($sql);
        $stmt->execute($params);
        return $stmt->fetchAll();
    }

    public function createHotel($hotelTO) {
        $em = $this->getEntityManager();

        $datosUbicacion = new Datosubicacion();
        $datosUbicacion->setDireccion($hotelTO->getDireccion());
        $datosUbicacion->setTelefono($hotelTO->getTelefono());
        $em->persist($datosUbicacion);

        $hotel = new Hotel();
        $hotel->setDescripcion($hotelTO->getDescripcion());
        $hotel->setEstrellas($hotelTO->getEstrellas());
        $hotel->setPromovido(Generalkeys::BOOLEAN_FALSE);
        $hotel->setDatosUbicacion($datosUbicacion);
        $hotel->setDestino($em->getReference('VisitaYucatanBundle:Destino', $hotelTO->getIdDestino()));
        $hotel->setEstatus($em->getReference('VisitaYucatanBundle:Estatus', Estatuskeys::ESTATUS_ACTIVO));

        $em->persist($hotel);
        $em->flush();
    }

    public function updateHotel($hotelTO) {
        $em = $this->getEntityManager();
        $hotelUpdate = $this->find($hotelTO->getId());
        if (!$hotelUpdate) {
            throw new EntityNotFoundException('El hotel con id ' . $hotelTO->getId() . " no se encontro");
        }
        // Actualiza la informacion del tour
        $hotelUpdate->setDescripcion($hotelTO->getDescripcion());
        $hotelUpdate->setEstrellas($hotelTO->getEstrellas());
        $hotelUpdate->getDatosUbicacion()->setDireccion($hotelTO->getDireccion());
        $hotelUpdate->getDatosUbicacion()->setTelefono($hotelTO->getTelefono());

        $em->persist($hotelUpdate);
        $em->flush();
    }

    public function deleteHotel($idHotel) {
        $em = $this->getEntityManager();
        $hotel = $this->find($idHotel);
        if (!$hotel) {
            throw new EntityNotFoundException('El Hotel con id ' . $idHotel . " no se encontro");
        }
        $hotel->setEstatus($em->getReference('VisitaYucatanBundle:Estatus', Estatuskeys::ESTATUS_INACTIVO));
        $em->persist($hotel);
        $em->flush();
    }

    public function promoveOrNotPromoveHotel($idHotel, $boobleanPromove) {
        $em = $this->getEntityManager();
        $hotel = $this->find($idHotel);
        if (!$hotel) {
            throw new EntityNotFoundException('El Hotel con id ' . $idHotel . " no se encontro");
        }
        $hotel->setPromovido($boobleanPromove);

        $em->persist($hotel);
        $em->flush();
    }
}
